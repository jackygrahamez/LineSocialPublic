{
  "name": "resware",
  "version": "0.0.4",
  "description": "Middleware to wrap around the http.ServerResponse for setting headers before writeHead() gets called",
  "main": "./index.js",
  "repository": {
    "type": "git",
    "url": "http://github.com/substack/node-resware.git"
  },
  "keywords": [
    "response",
    "headers",
    "http"
  ],
  "author": {
    "name": "James Halliday",
    "email": "mail@substack.net",
    "url": "http://substack.net"
  },
  "license": "MIT/X11",
  "engine": [
    "node >=0.2.0"
  ],
  "readme": "resware\n=======\n\nHack an http.ServerResponse object to set headers piece-wise before writeHead().\n\nExample\n=======\n\nFirst make a webapp and require the resware middleware:\n\n    var connect = require('connect');\n    var webserver = connect.createServer();\n    webserver.use(require('resware'));\n\nAnd then in your middleware you can do fun stuff like...\n \n    webserver.use(connect.cookieDecoder());\n    webserver.use(function (req, res, next) {\n        if (!req.cookies.bizzle) {\n            var rand = Math.random();\n            res.setCookie('bizzle', rand);\n            req.cookies.bizzle = rand;\n        }\n        next();\n    });\n\nand the headers you set in the middleware are magically wrapped\nso it just worksâ„¢!\n\n    webserver.use(connect.router(function (app) {\n        app.get('/', function (req, res) {\n            res.writeHead(200, { 'Content-Type' : 'text/plain' });\n            res.end('bizzle = ' + req.cookies.bizzle);\n        });\n    }));\n    \n    webserver.listen(9999);\n    console.log('Listening on 9999');\n\nKudos\n=====\nBased heavily on Marak's [response project](http://github.com/marak/response).\n",
  "readmeFilename": "README.markdown",
  "bugs": {
    "url": "https://github.com/substack/node-resware/issues"
  },
  "_id": "resware@0.0.4",
  "_from": "resware@>=0.0.4"
}
