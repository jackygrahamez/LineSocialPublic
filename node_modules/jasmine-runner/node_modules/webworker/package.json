{
  "name": "webworker",
  "version": "0.8.2",
  "description": "An implementation of the HTML5 Web Worker API",
  "author": {
    "name": "Peter Griess",
    "email": "pg@std.in"
  },
  "engines": {
    "node": ">=0.1.98"
  },
  "dependencies": {
    "websocket-client": "0.9.3 - 0.9.99999"
  },
  "repositories": [
    {
      "type": "git",
      "url": "http://github.com/pgriess/node-webworker"
    }
  ],
  "licenses": [
    {
      "type": "BSD",
      "url": "http://github.com/pgriess/node-webworker/blob/master/LICENSE"
    }
  ],
  "main": "./lib/webworker",
  "readme": "<p><code>node-webworkers</code> is an experimental implementation of the <a href=\"http://www.whatwg.org/specs/web-workers/current-work/\">Web Workers\nAPI</a> for\n   <a href=\"http://nodejs.org\">node.js</a>.\n</p>\n\n<h3>Example</h3>\n\n<h4>Master source</h4>\n<pre><code>var sys = require('sys');\nvar Worker = require('webworker').Worker;\n\nvar w = new Worker('foo.js');\n\nw.onmessage = function(e) {\n    sys.debug('Received mesage: ' + sys.inspect(e));\n    w.terminate();\n};\n\nw.postMessage({ foo : 'bar' });\n</code></pre>\n<h4>Worker source</h4>\n<pre><code>onmessage = function(e) {\n    postMessage({ test : 'this is a test' });\n};\n\nonclose = function() {\n    sys.debug('Worker shuttting down.');\n};\n</code></pre>\n<h3>API</h3>\n<p>Supported API methods are\n</p>\n<ul>\n <li>\n     <code>postMessage(e)</code> in both workers and the parent; messages are in the\n parent if this is invoked before the child is fully initialized\n </li>\n\n <li>\n     <code>onmessage(e)</code> in both workers and the parent\n </li>\n\n <li>\n     <code>onerror(e)</code>in both workers and the parent\n </li>\n\n <li>\n     <code>terminate()</code> in the parent\n </li>\n</ul>\n<p>In addition, some nonstandard APIs are provided\n</p>\n<ul>\n <li>\n     <code>onclose()</code> in the worker (allows for graceful shutdown)\n </li>\n\n <li>\n     The <code>postMessage()</code> method takes an additional optional file descriptor parameter, which\n will be sent with the message. This descriptor will be passed to\n <code>onmessage</code> handlers as an optional <code>fd</code> field. Handlers receiving\n messages posted without file descriptors will not see an <code>fd</code> field. Both\n the parent and child can send file descriptors using this mechanism.\n </li>\n\n <li>\n     <code>Worker.onexit(code, signal)</code> in the master, which is invoked on the\n master <code>Worker</code> object when the worker process exits.\n </li>\n\n <li>\n     The <code>Worker</code> constructor takes an additional optional object argument,\n <code>opts</code>, which is used as a dictionary of options with the following keys<ul>\n <li>\n     <code>args</code> : A string or array of strings to pass to the <code>node</code> executable\n         before the filename to invoke. This can be used to request that\n         the worker start up in debug mode (e.g. <code>{ 'args' :\n         '--debug-brk' }</code>).\n </li>\n</ul>\n\n </li>\n</ul>\n\n<h3>Installation</h3>\n<p>This package requires <a href=\"http://github.com/pgriess/node-msgpack\">node-msgpack</a>.\n</p>\n<p>Installation is done using <code>make</code> on the <code>install</code> target. The <code>INSTALL_DIR</code>\n   variable defines the directory to which JavaScript files will be installed and\n   defaults to <code>/opt/local/share/node</code>.\n</p>\n<p>For example, to install to /foo/bar\n</p>\n<pre><code>% sudo make install INSTALL_DIR=/foo/bar\ninstall -m 755 -d /foo/bar\ninstall -m 444 lib/webworker.js lib/webworker-utils.js \\\n            lib/webworker-child.js /foo/bar\n% find /foo/bar\n/foo/bar\n/foo/bar/webworker-child.js\n/foo/bar/webworker-utils.js\n/foo/bar/webworker.js\n</code></pre>\n",
  "readmeFilename": "README.html",
  "repository": {
    "type": "git",
    "url": "http://github.com/pgriess/node-webworker"
  },
  "bugs": {
    "url": "https://github.com/pgriess/node-webworker/issues"
  },
  "homepage": "https://github.com/pgriess/node-webworker",
  "_id": "webworker@0.8.2",
  "dist": {
    "shasum": "2f8428aeb6ec0eb9a2583277f4d3c4c97e2528f6"
  },
  "_from": "webworker@0.8.2",
  "_resolved": "https://registry.npmjs.org/webworker/-/webworker-0.8.2.tgz"
}
