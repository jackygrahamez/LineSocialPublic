{
  "name": "grunt-mocha-selenium",
  "version": "0.7.0",
  "description": "Run functional Mocha tests with webdriver against a local selenium instance.",
  "homepage": "https://github.com/wookiehangover/grunt-mocha-selenium",
  "bugs": {
    "url": "https://github.com/wookiehangover/grunt-mocha-selenium/issues"
  },
  "author": {
    "name": "Sam Breed",
    "email": "sam@quickleft.com"
  },
  "keywords": [
    "gruntplugin",
    "selenium",
    "mocha",
    "appium",
    "testing"
  ],
  "main": "Gruntfile.js",
  "repository": {
    "type": "git",
    "url": "https://github.com/wookiehangover/grunt-mocha-selenium"
  },
  "licenses": [
    {
      "type": "MIT"
    }
  ],
  "devDependencies": {
    "grunt-contrib-jshint": "~0.2.0"
  },
  "scripts": {
    "test": "grunt test"
  },
  "dependencies": {
    "selenium-launcher": "git://github.com/wookiehangover/nodejs-selenium-launcher.git",
    "wd": "~0.2.0",
    "mocha": "~1.12.0",
    "phantomjs": "~1.9.1",
    "async": "~0.2.9",
    "freeport": "~1.0.2"
  },
  "readme": "# grunt-mocha-selenium\n\n> Run functional [Mocha](https://github.com/visionmedia/mocha) tests\n> with [wd](https://github.com/admc/wd) with [Selenium](http://docs.seleniumhq.org/), Phantomjs and\n> [Appium](http://appium.io/).\n\n## Getting Started\n\nThis plugin requires Grunt.\n\nIf you haven't used [Grunt](http://gruntjs.com/) before, be sure to\ncheck out the [Getting Started](http://gruntjs.com/getting-started)\nguide, as it explains how to create a\n[Gruntfile](http://gruntjs.com/sample-gruntfile) as well as install and\nuse Grunt plugins. Once you're familiar with that process, you may\ninstall this plugin with this command:\n\n```shell\nnpm install grunt-mocha-selenium --save-dev\n```\n\nOnce the plugin has been installed, it may be enabled inside your\nGruntfile with this line of JavaScript:\n\n```js\ngrunt.loadNpmTasks('grunt-mocha-selenium');\n```\n\n## The \"mochaSelenium\" task\n\nSelenium tests are run by a standalone selenium driver that will be\ndownloaded the first time the task is run. Chrome support is provided by\nthe [Chrome\nDriver](https://code.google.com/p/selenium/wiki/ChromeDriver) plugin for\nSelenium and is provided on demand.\n\nThe task fires up a selenium instance for the browser of your choice\n(Firefox, Chrome or Phantomjs) and initializes an instance of\n[wd](https://github.com/admc/wd), passing it to the mocha test runner's\ncontext.\n\nTake a look in the `test` directory for examples of what mocha tests\nwith wd look like.\n\n### Overview\nIn your project's Gruntfile, add a section named `mochaSelenium` to the\ndata object passed into `grunt.initConfig()`.\n\n```js\ngrunt.initConfig({\n  mochaSelenium: {\n    options: {\n      // Mocha options\n      reporter: 'spec',\n      timeout: 30e3,\n      // Toggles wd's promises API, default:false\n      usePromises: false\n    },\n    firefox: {\n      src: ['test/*.js']\n      // firefox is the default browser, so no browserName option required\n    },\n    chrome: {\n      src: ['test/*.js'],\n      options: {\n        // Chrome browser must be installed from Chromedriver support\n        browserName: 'chrome'\n      }\n    },\n    phantomjs: {\n      src: ['test/*.js'],\n      options: {\n        // phantomjs must be in the $PATH when invoked\n        browserName: 'phantomjs'\n      }\n    }\n  }\n})\n```\n\n### Options\n\nThe usual Mocha options are passed through this task to a new Mocha\ninstance.\n\nThe following options can be supplied to the task:\n\n#### options.usePromises\n\nType: `Boolean` Default value: `false`\n\nIf enabled, this will use the [promise-enabled wd browser\nAPI](https://github.com/admc/wd#promises-api) instead of the normal\nsynchronous API.\n\n### options.host and options.port\n\nIf these are specified then a server will not be started but these settings will be used to connect to an existing server.\n\n\"options.username\" and \"options.accesskey\" can be specified if you want to use Sauce Labs' on demand service.\n\n## The \"mochaAppium\" task\n\nThe \"mochaAppium\" task will use the [Appium](http://appium.io/) test\nautomation framework to provide a selenium bridge to native and hybrid\napplications.\n\n**Unlike the \"mochaSelenium\" tasks, Appium needs to be installed\nseparately.** See their [getting started\nguide](http://appium.io/getting-started.html) for information on\ninstalling and configuring Appium on you system. You don't need to run\nan Appium server before running this task, you just need to have it\ninstalled.\n\n### Overview\nIn your project's Gruntfile, add a section named `mochaAppium` to the\ndata object passed into `grunt.initConfig()`.\n\n```js\ngrunt.initConfig({\n  mochaAppium: {\n    options: {\n      // Mocha options\n      reporter: 'spec',\n      timeout: 30e3,\n      // Toggles wd's promises API, default:false\n      usePromises: false\n      // Path to appium executable, default:'appium'\n      appiumPath: 'appium'\n    },\n    iphone: {\n      src: ['test/*.js'],\n      options: {\n        // Appium Options\n        device: 'iPhone Simulator',\n        platform: 'MAC',\n        version: '6.1',\n        // A url of a zip file containg your .app package\n        // or \n        // A local absolute path to your simulator-compiled .app directory\n        app: 'http://appium.s3.amazonaws.com/TestApp6.0.app.zip'\n      }\n    }\n  }\n});\n```\n\n### Usage Examples\n\nSee this project's `Gruntfile.js` for examples.\n\nIn this example, we'll run functinoal mocha tests for all files in the\n`test` directory using the wd promises API and the nyan-cat reporter.\n\n```js\ngrunt.initConfig({\n  mochaSelenium: {\n    options: {\n      reporter: 'nyan',\n      usePromises: true,\n      useChrome: true\n    },\n    all: ['test/*.js' ]\n  },\n})\n```\n\n## Contributing\n\nIn lieu of a formal styleguide, take care to maintain the existing\ncoding style. Add unit tests for any new or changed functionality. Lint\nand test your code using [Grunt](http://gruntjs.com/).\n\n## Release History\n\n* v0.7.0 - bumping selenium and chromedriver versions\n* v0.4.0 - add Appium support\n* v0.3.0 - add phantomjs support\n* v0.2.0 - add chromedriver support\n* v0.0.1 - initial release\n\n## Licensed under the MIT license.\n",
  "readmeFilename": "README.md",
  "_id": "grunt-mocha-selenium@0.7.0",
  "dist": {
    "shasum": "7756b5008c854722ed86fa61a625e3ea2dbb53f2"
  },
  "_from": "grunt-mocha-selenium@",
  "_resolved": "https://registry.npmjs.org/grunt-mocha-selenium/-/grunt-mocha-selenium-0.7.0.tgz"
}
